---
import Header from "./../layout/header.astro";
import Fonter from "./../layout/fonter.astro";
import "../styles/wurm.styles.css";
import "../styles/post.styles.scss";
import "../styles/consent.styles.scss";

import heed from "../images/heed.webp";
import { Image } from "astro:assets";
import { AstroSeo } from "@astrolib/seo";

export const prerender = true;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <Fonter />
    <AstroSeo
      description="Let me 'rope you in' with my content about my adventures in Wurm Online, including my guides on leveling up different skills."
      canonical="https://wurm.rodeo"
      ,
      openGraph={{
        url: "https://wurm.rodeo",
        title: "Wurm Rodeo - Musings on the great MMO, Wurm Online",
        description:
          "Let me 'rope you in' with my content about my adventures in Wurm Online, including my guides on leveling up different skills.",
        images: [
          {
            url: "https://wurm.rodeo/og.webp",
            width: 1200,
            height: 630,
            alt: "Wurm Rodeo Logo",
            type: "image/webp",
          },
        ],
        site_name: "Wurm Rodeo",
      }}
    />
    <title>Wurm Rodeo - Musings on the great MMO, Wurm Online</title>

    <!-- Google tag (gtag.js) -->
    <!-- Google tag (gtag.js) -->
    <script
      is:inline
      src="https://www.googletagmanager.com/gtag/js?id=G-ZTFZE7LM02"></script>
    <script is:inline>
      // Initialize dataLayer
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }

      // Initialize gtag
      gtag("js", new Date());

      // Configure Consent Mode
      gtag("consent", "default", {
        ad_storage: "granted", // Default state
        analytics_storage: "granted", // Default state
      });

      // Example: Update Consent based on user action
      // Assuming you provide a consent UI
      function updateConsent(adConsent, analyticsConsent) {
        gtag("consent", "update", {
          ad_storage: adConsent ? "granted" : "denied",
          analytics_storage: analyticsConsent ? "granted" : "denied",
        });
      }

      // Add the Google Analytics configuration
      gtag("config", "G-ZTFZE7LM02");
    </script>
  </head>
  <body>
    <Header />

    <div class="blog-panel">
      <h1 class="satisfy-regular">Yeee-haw, Pardner!</h1>
      <Image src={heed} format="webp" alt="Stuck in the oak." />
      <p>
        Oh, we've really outdone ourselves with this site for youâ€”because
        clearly, this is the only thing you could possibly want. We're just
        certain you'll absolutely adore it, just like everyone else!
      </p>
      <p>Could someone help me get outta this freaking oak tree?</p>
    </div>

    <!-- Consent Banner -->
    <div id="consent-banner" class="consent-banner" style="display: none">
      <h4>We use cookies to improve your experience.</h4>
      <div class="consent-options">
        <label>
          <input type="checkbox" id="analytics-consent-checkbox" /> Enable Analytics
          Cookies
        </label>
        <label>
          <input type="checkbox" id="ad-consent-checkbox" /> Enable Advertising Cookies
        </label>
      </div>
      <button id="save-preferences">Save Preferences</button>
    </div>

    <script is:inline>
      // Check stored preferences on page load
      window.addEventListener("DOMContentLoaded", () => {
        const adConsent = localStorage.getItem("adConsent");
        const analyticsConsent = localStorage.getItem("analyticsConsent");

        if (adConsent && analyticsConsent) {
          // Apply stored consent preferences
          gtag("consent", "update", {
            ad_storage: adConsent === "granted" ? "granted" : "denied",
            analytics_storage:
              analyticsConsent === "granted" ? "granted" : "denied",
          });

          // Hide the consent banner
          document.getElementById("consent-banner").style.display = "none";
        }
      });

      // Save preferences when the user clicks the button
      document
        .getElementById("save-preferences")
        .addEventListener("click", function () {
          const adConsent = document.querySelector("#ad-consent-checkbox")
            .checked
            ? "granted"
            : "denied";
          const analyticsConsent = document.querySelector(
            "#analytics-consent-checkbox"
          ).checked
            ? "granted"
            : "denied";

          // Save preferences in localStorage
          localStorage.setItem("adConsent", adConsent);
          localStorage.setItem("analyticsConsent", analyticsConsent);

          // Update Consent Mode
          gtag("consent", "update", {
            ad_storage: adConsent,
            analytics_storage: analyticsConsent,
          });

          // Hide the consent banner
          document.getElementById("consent-banner").style.display = "none";
        });
    </script>
  </body>
</html>
